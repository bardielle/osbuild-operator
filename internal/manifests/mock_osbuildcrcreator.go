// Code generated by MockGen. DO NOT EDIT.
// Source: osbuild.go

// Package manifests is a generated GoMock package.
package manifests

import (
	context "context"
	reflect "reflect"

	logr "github.com/go-logr/logr"
	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/project-flotta/osbuild-operator/api/v1alpha1"
	osbuild "github.com/project-flotta/osbuild-operator/internal/repository/osbuild"
	osbuildconfig "github.com/project-flotta/osbuild-operator/internal/repository/osbuildconfig"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// MockOSBuildCRCreatorInterface is a mock of OSBuildCRCreatorInterface interface.
type MockOSBuildCRCreatorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOSBuildCRCreatorInterfaceMockRecorder
}

// MockOSBuildCRCreatorInterfaceMockRecorder is the mock recorder for MockOSBuildCRCreatorInterface.
type MockOSBuildCRCreatorInterfaceMockRecorder struct {
	mock *MockOSBuildCRCreatorInterface
}

// NewMockOSBuildCRCreatorInterface creates a new mock instance.
func NewMockOSBuildCRCreatorInterface(ctrl *gomock.Controller) *MockOSBuildCRCreatorInterface {
	mock := &MockOSBuildCRCreatorInterface{ctrl: ctrl}
	mock.recorder = &MockOSBuildCRCreatorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOSBuildCRCreatorInterface) EXPECT() *MockOSBuildCRCreatorInterfaceMockRecorder {
	return m.recorder
}

// CreateNewOSBuildCR mocks base method.
func (m *MockOSBuildCRCreatorInterface) CreateNewOSBuildCR(ctx context.Context, osBuildConfig *v1alpha1.OSBuildConfig, logger logr.Logger, osBuildConfigRepository osbuildconfig.Repository, osBuildRepository osbuild.Repository, scheme *runtime.Scheme) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewOSBuildCR", ctx, osBuildConfig, logger, osBuildConfigRepository, osBuildRepository, scheme)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNewOSBuildCR indicates an expected call of CreateNewOSBuildCR.
func (mr *MockOSBuildCRCreatorInterfaceMockRecorder) CreateNewOSBuildCR(ctx, osBuildConfig, logger, osBuildConfigRepository, osBuildRepository, scheme interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewOSBuildCR", reflect.TypeOf((*MockOSBuildCRCreatorInterface)(nil).CreateNewOSBuildCR), ctx, osBuildConfig, logger, osBuildConfigRepository, osBuildRepository, scheme)
}
